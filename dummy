table_content=$(echo "$content" | grep -o '<table[^>]*>.*</table>')

# Extract key-value pairs using awk
key_value_pairs=$(echo "$table_content" | awk -F'col' 'NR>1 {gsub(/^[ \t]+|[ \t]+$/, ""); if (NF > 1) print $1, $2}')


TRY 2
key_value_pairs=$(echo "$content" | awk -F'</?th[^>]*>' 'NR>1 {gsub(/^[ \t]+|[ \t]+$/, ""); if (NF > 1) print $2, $4}')

TRY 3
key_value_pairs=$(echo "$content" | awk -F'</?th[^>]*>' 'NR>1 {gsub(/[[:space:]]/, ""); if (NF > 1) print $2, $4}')

TRY 4
key_value_pairs=$(echo "$content" | awk -F'</?th[^>]*>' 'NR>1 {if (NF > 1) {print $2, $4}}')

TRY 5 (worked for first occurence)
key_value_pairs=$(echo "$content" | grep -o '<th[^>]*>.*</th>' | awk -F'</?th[^>]*>' '{if (NF > 1) {print $2, $4}}')

TRY 6 in a loop (only giving first occurence)
echo "$content" | grep -o '<tr>.*</tr>' | while IFS= read -r line; do
    key=$(echo "$line" | awk -F'</?th[^>]*>' '{if (NF > 1) {print $2}}')
    value=$(echo "$line" | awk -F'</?th[^>]*>' '{if (NF > 1) {print $4}}')
    echo "Key: $key, Value: $value"
done

TRY 7 (WORKING)
echo "$content" | awk -F'</?th[^>]*>' 'BEGIN { RS="<tr>"; OFS="," } NR>1 {gsub(/[[:space:]]/, ""); if (NF > 1) print $2, $4}'

TRY 8 (for multiple columns)
# Extract column headers
column_headers=$(echo "$content" | awk -F'</?th[^>]*>' 'NR==1 {for (i=2; i<=NF; i+=2) {gsub(/[[:space:]]/, ""); printf "%s%s", $i, (i<NF ? "," : ORS)}}')

# Extract key-value pairs using awk
echo "$content" | awk -F'</?th[^>]*>' -v headers="$column_headers" 'BEGIN { RS="<tr>"; OFS=","; split(headers, columns, ",") } NR>1 {gsub(/[[:space:]]/, ""); for (i=2; i<=NF; i+=2) printf "%s%s", $i, (i<NF ? OFS : ORS)}'

TRY 9 
column_headers=$(echo "$content" | awk -F'</?th[^>]*>' 'NR==1 {gsub(/[[:space:]]/, ""); for (i=2; i<=NF; i+=2) printf "%s%s", $i, (i<NF ? "," : ORS)}')
echo "$content" | awk -F'</?th[^>]*>' -v headers="$column_headers" 'BEGIN { RS="<tr>"; OFS=","; split(headers, columns, ",") } NR>1 {gsub(/[[:space:]]/, ""); for (i=2; i<=NF; i+=2) printf "%s%s", $i, (i<NF ? OFS : ORS)}'

TRY 10:
column_headers=$(echo "$content" | awk -F'</?th[^>]*>' 'NR==1 {gsub(/[[:space:]]/, ""); for (i=2; i<=NF; i+=2) printf "%s%s", $i, (i<NF ? ORS : "")}')
echo "$content" | awk -F'</?th[^>]*>' -v headers="$column_headers" 'BEGIN { RS="<tr>"; OFS=","; split(headers, columns, ",") } NR>1 {gsub(/[[:space:]]/, ""); for (i=2; i<=NF; i+=2) printf "%s%s", $i, (i<NF ? OFS : ORS)}'


formatted_values=$(echo "$values" | tr ' ' '\n' | paste -s -d ',' - | sed 's/\([^,]*,[^,]*,[^,]*\)/\1\n/g' | sed 's/,$//')

formatted_values=$(echo "$values" | tr ' ' '\n' | paste -s -d ',' - | sed 's/\([^,]*,[^,]*,[^,]*\)/\1\n/g')
